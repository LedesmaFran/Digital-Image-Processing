--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=9 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 17.0 cbx_cycloneii 2017:04:25:18:06:29:SJ cbx_lpm_add_sub 2017:04:25:18:06:29:SJ cbx_lpm_compare 2017:04:25:18:06:29:SJ cbx_lpm_decode 2017:04:25:18:06:29:SJ cbx_mgl 2017:04:25:18:09:28:SJ cbx_nadder 2017:04:25:18:06:30:SJ cbx_stratix 2017:04:25:18:06:30:SJ cbx_stratixii 2017:04:25:18:06:30:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_tsa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[8..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[8..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode613w[1..0]	: WIRE;
	w_anode622w[3..0]	: WIRE;
	w_anode639w[3..0]	: WIRE;
	w_anode649w[3..0]	: WIRE;
	w_anode659w[3..0]	: WIRE;
	w_anode669w[3..0]	: WIRE;
	w_anode679w[3..0]	: WIRE;
	w_anode689w[3..0]	: WIRE;
	w_anode699w[3..0]	: WIRE;
	w_anode711w[1..0]	: WIRE;
	w_anode718w[3..0]	: WIRE;
	w_anode729w[3..0]	: WIRE;
	w_anode739w[3..0]	: WIRE;
	w_anode749w[3..0]	: WIRE;
	w_anode759w[3..0]	: WIRE;
	w_anode769w[3..0]	: WIRE;
	w_anode779w[3..0]	: WIRE;
	w_anode789w[3..0]	: WIRE;
	w_data611w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[8..0] = eq_wire[8..0];
	eq_wire[] = ( ( w_anode789w[3..3], w_anode779w[3..3], w_anode769w[3..3], w_anode759w[3..3], w_anode749w[3..3], w_anode739w[3..3], w_anode729w[3..3], w_anode718w[3..3]), ( w_anode699w[3..3], w_anode689w[3..3], w_anode679w[3..3], w_anode669w[3..3], w_anode659w[3..3], w_anode649w[3..3], w_anode639w[3..3], w_anode622w[3..3]));
	w_anode613w[] = ( (w_anode613w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode622w[] = ( (w_anode622w[2..2] & (! w_data611w[2..2])), (w_anode622w[1..1] & (! w_data611w[1..1])), (w_anode622w[0..0] & (! w_data611w[0..0])), w_anode613w[1..1]);
	w_anode639w[] = ( (w_anode639w[2..2] & (! w_data611w[2..2])), (w_anode639w[1..1] & (! w_data611w[1..1])), (w_anode639w[0..0] & w_data611w[0..0]), w_anode613w[1..1]);
	w_anode649w[] = ( (w_anode649w[2..2] & (! w_data611w[2..2])), (w_anode649w[1..1] & w_data611w[1..1]), (w_anode649w[0..0] & (! w_data611w[0..0])), w_anode613w[1..1]);
	w_anode659w[] = ( (w_anode659w[2..2] & (! w_data611w[2..2])), (w_anode659w[1..1] & w_data611w[1..1]), (w_anode659w[0..0] & w_data611w[0..0]), w_anode613w[1..1]);
	w_anode669w[] = ( (w_anode669w[2..2] & w_data611w[2..2]), (w_anode669w[1..1] & (! w_data611w[1..1])), (w_anode669w[0..0] & (! w_data611w[0..0])), w_anode613w[1..1]);
	w_anode679w[] = ( (w_anode679w[2..2] & w_data611w[2..2]), (w_anode679w[1..1] & (! w_data611w[1..1])), (w_anode679w[0..0] & w_data611w[0..0]), w_anode613w[1..1]);
	w_anode689w[] = ( (w_anode689w[2..2] & w_data611w[2..2]), (w_anode689w[1..1] & w_data611w[1..1]), (w_anode689w[0..0] & (! w_data611w[0..0])), w_anode613w[1..1]);
	w_anode699w[] = ( (w_anode699w[2..2] & w_data611w[2..2]), (w_anode699w[1..1] & w_data611w[1..1]), (w_anode699w[0..0] & w_data611w[0..0]), w_anode613w[1..1]);
	w_anode711w[] = ( (w_anode711w[0..0] & data_wire[3..3]), enable_wire);
	w_anode718w[] = ( (w_anode718w[2..2] & (! w_data611w[2..2])), (w_anode718w[1..1] & (! w_data611w[1..1])), (w_anode718w[0..0] & (! w_data611w[0..0])), w_anode711w[1..1]);
	w_anode729w[] = ( (w_anode729w[2..2] & (! w_data611w[2..2])), (w_anode729w[1..1] & (! w_data611w[1..1])), (w_anode729w[0..0] & w_data611w[0..0]), w_anode711w[1..1]);
	w_anode739w[] = ( (w_anode739w[2..2] & (! w_data611w[2..2])), (w_anode739w[1..1] & w_data611w[1..1]), (w_anode739w[0..0] & (! w_data611w[0..0])), w_anode711w[1..1]);
	w_anode749w[] = ( (w_anode749w[2..2] & (! w_data611w[2..2])), (w_anode749w[1..1] & w_data611w[1..1]), (w_anode749w[0..0] & w_data611w[0..0]), w_anode711w[1..1]);
	w_anode759w[] = ( (w_anode759w[2..2] & w_data611w[2..2]), (w_anode759w[1..1] & (! w_data611w[1..1])), (w_anode759w[0..0] & (! w_data611w[0..0])), w_anode711w[1..1]);
	w_anode769w[] = ( (w_anode769w[2..2] & w_data611w[2..2]), (w_anode769w[1..1] & (! w_data611w[1..1])), (w_anode769w[0..0] & w_data611w[0..0]), w_anode711w[1..1]);
	w_anode779w[] = ( (w_anode779w[2..2] & w_data611w[2..2]), (w_anode779w[1..1] & w_data611w[1..1]), (w_anode779w[0..0] & (! w_data611w[0..0])), w_anode711w[1..1]);
	w_anode789w[] = ( (w_anode789w[2..2] & w_data611w[2..2]), (w_anode789w[1..1] & w_data611w[1..1]), (w_anode789w[0..0] & w_data611w[0..0]), w_anode711w[1..1]);
	w_data611w[2..0] = data_wire[2..0];
END;
--VALID FILE
